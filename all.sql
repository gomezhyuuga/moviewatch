-- MySQL Script generated by MySQL Workbench
-- Wed May 13 13:08:33 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema moviewatch
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `moviewatch` ;

-- -----------------------------------------------------
-- Schema moviewatch
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `moviewatch` DEFAULT CHARACTER SET utf8 ;
USE `moviewatch` ;

-- -----------------------------------------------------
-- Table `moviewatch`.`Film`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`Film` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`Film` (
  `idFilm` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `genre` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `description` TEXT NULL,
  `releaseDate` DATE NULL,
  `director` VARCHAR(200) NULL,
  `duration` INT NULL,
  `filepath` VARCHAR(200) NULL,
  `poster` VARCHAR(200) NULL DEFAULT 'no_poster.png',
  PRIMARY KEY (`idFilm`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`Country`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`Country` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`Country` (
  `idCountry` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `continent` VARCHAR(45) NULL,
  PRIMARY KEY (`idCountry`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`Account` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`Account` (
  `idAccount` INT NOT NULL AUTO_INCREMENT,
  `idCountry` INT NULL,
  `username` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `memberSince` DATE NULL,
  `password` VARCHAR(100) NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_country_idx` (`idCountry` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_country`
    FOREIGN KEY (`idCountry`)
    REFERENCES `moviewatch`.`Country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`UserRating`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`UserRating` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`UserRating` (
  `idRating` INT NOT NULL AUTO_INCREMENT,
  `idAccount` INT NOT NULL,
  `idFilm` INT NOT NULL,
  `rating` INT NULL,
  INDEX `fk_film_idx` (`idFilm` ASC),
  INDEX `fk_account_idx` (`idAccount` ASC),
  PRIMARY KEY (`idRating`),
  UNIQUE INDEX `rat` (`idAccount` ASC, `idFilm` ASC),
  CONSTRAINT `fk_film`
    FOREIGN KEY (`idFilm`)
    REFERENCES `moviewatch`.`Film` (`idFilm`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_account`
    FOREIGN KEY (`idAccount`)
    REFERENCES `moviewatch`.`Account` (`idAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`Catalog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`Catalog` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`Catalog` (
  `idCatalog` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idCatalog`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`FilmCatalog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`FilmCatalog` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`FilmCatalog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `idFilm` INT NOT NULL,
  `idCatalog` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_film_catalog_idx` (`idFilm` ASC),
  INDEX `fk_catalog_for_film_idx` (`idCatalog` ASC),
  CONSTRAINT `fk_film_catalog`
    FOREIGN KEY (`idFilm`)
    REFERENCES `moviewatch`.`Film` (`idFilm`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_catalog_for_film`
    FOREIGN KEY (`idCatalog`)
    REFERENCES `moviewatch`.`Catalog` (`idCatalog`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`AmericanCatalog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`AmericanCatalog` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`AmericanCatalog` (
  `idFilm` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `genre` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `description` TEXT NULL,
  `releaseDate` DATE NULL,
  `director` VARCHAR(200) NULL,
  `duration` INT NULL,
  `filepath` VARCHAR(200) NULL,
  `poster` VARCHAR(200) NULL DEFAULT 'no_poster.png',
  PRIMARY KEY (`idFilm`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`AmericanAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`AmericanAccount` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`AmericanAccount` (
  `idAccount` INT NOT NULL AUTO_INCREMENT,
  `idCountry` INT NULL,
  `username` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `memberSince` DATE NULL,
  `password` VARCHAR(45) NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_country_idx` (`idCountry` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_country_amcat`
    FOREIGN KEY (`idCountry`)
    REFERENCES `moviewatch`.`Country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`AsianAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`AsianAccount` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`AsianAccount` (
  `idAccount` INT NOT NULL AUTO_INCREMENT,
  `idCountry` INT NULL,
  `username` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `memberSince` DATE NULL,
  `password` VARCHAR(45) NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_country_idx` (`idCountry` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_country_asac`
    FOREIGN KEY (`idCountry`)
    REFERENCES `moviewatch`.`Country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`EuropeanAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`EuropeanAccount` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`EuropeanAccount` (
  `idAccount` INT NOT NULL AUTO_INCREMENT,
  `idCountry` INT NULL,
  `username` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `memberSince` DATE NULL,
  `password` VARCHAR(45) NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_country_idx` (`idCountry` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_country_euac`
    FOREIGN KEY (`idCountry`)
    REFERENCES `moviewatch`.`Country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`EuropeanAccount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`EuropeanAccount` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`EuropeanAccount` (
  `idAccount` INT NOT NULL AUTO_INCREMENT,
  `idCountry` INT NULL,
  `username` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `memberSince` DATE NULL,
  `password` VARCHAR(45) NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`idAccount`),
  INDEX `fk_country_idx` (`idCountry` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  CONSTRAINT `fk_country_euac`
    FOREIGN KEY (`idCountry`)
    REFERENCES `moviewatch`.`Country` (`idCountry`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`AsianCatalog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`AsianCatalog` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`AsianCatalog` (
  `idFilm` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `genre` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `description` TEXT NULL,
  `releaseDate` DATE NULL,
  `director` VARCHAR(200) NULL,
  `duration` INT NULL,
  `filepath` VARCHAR(200) NULL,
  `poster` VARCHAR(200) NULL DEFAULT 'no_poster.png',
  PRIMARY KEY (`idFilm`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `moviewatch`.`EuropeanCatalog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `moviewatch`.`EuropeanCatalog` ;

CREATE TABLE IF NOT EXISTS `moviewatch`.`EuropeanCatalog` (
  `idFilm` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NULL,
  `genre` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `description` TEXT NULL,
  `releaseDate` DATE NULL,
  `director` VARCHAR(200) NULL,
  `duration` INT NULL,
  `filepath` VARCHAR(200) NULL,
  `poster` VARCHAR(200) NULL DEFAULT 'no_poster.png',
  PRIMARY KEY (`idFilm`))
ENGINE = InnoDB;

USE `moviewatch` ;

-- -----------------------------------------------------
-- procedure setNewRating
-- -----------------------------------------------------

USE `moviewatch`;
DROP procedure IF EXISTS `moviewatch`.`setNewRating`;

DELIMITER $$
USE `moviewatch`$$
CREATE PROCEDURE `setNewRating`(idFIlm int, newRank float)
BEGIN
	update Film
    set Film.rating = newRank
    where Film.idFilm = idFilm;
END
$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure copyFilmToCatalog
-- -----------------------------------------------------

USE `moviewatch`;
DROP procedure IF EXISTS `moviewatch`.`copyFilmToCatalog`;

DELIMITER $$
USE `moviewatch`$$
CREATE PROCEDURE `copyFilmToCatalog` (p_film_id int, p_destiny int)
BEGIN
if (p_destiny = 1) then #AmericanCatalog
			insert into AmericanCatalog (idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster) 
            select idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster
            from Film
            where p_film_id = Film.idFilm;
        
        elseif (p_destiny = 2) then #EuropeanCatalog
			insert into EuropeanCatalog (idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster) 
            select idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster
            from Film
            where p_film_id = Film.idFilm;
            
		else
			insert into AsianCatalog (idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster) 
            select idFilm, name, genre, rating, description, releaseDate, director, duration, filepath, poster
            from Film
            where p_film_id = Film.idFilm;
        
        #else #AsianCatalog
        
        END IF;
END
$$

DELIMITER ;
USE `moviewatch`;

DELIMITER $$

USE `moviewatch`$$
DROP TRIGGER IF EXISTS `moviewatch`.`Film_AFTER_DELETE` $$
USE `moviewatch`$$
CREATE DEFINER = CURRENT_USER TRIGGER `moviewatch`.`Film_AFTER_DELETE` AFTER DELETE ON `Film` FOR EACH ROW
BEGIN
	DELETE from AmericanCatalog where AmericanCatalog.idFilm = OLD.idFilm;
	DELETE from EuropeanCatalog where AmericanCatalog.idFilm = OLD.idFilm;
	DELETE from AsianCatalog where AmericanCatalog.idFilm = OLD.idFilm;
END
$$


USE `moviewatch`$$
DROP TRIGGER IF EXISTS `moviewatch`.`UserRating_AFTER_INSERT` $$
USE `moviewatch`$$
CREATE DEFINER = CURRENT_USER TRIGGER `moviewatch`.`UserRating_AFTER_INSERT` AFTER INSERT ON `UserRating` FOR EACH ROW
BEGIN

    DECLARE movieAverage double;
    
    SELECT AVG(rating) into movieAverage
    from UserRating
    where (new.idFilm = UserRating.idFilm);
    
    call SetNewRating(NEW.idFilm, movieAverage);
END
$$


DELIMITER ;
SET SQL_MODE = '';
GRANT USAGE ON *.* TO appuser;
 DROP USER appuser;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'appuser' IDENTIFIED BY '1234';

GRANT ALL ON `moviewatch`.* TO 'appuser';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `moviewatch`.`Film`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviewatch`;
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (2, 'American History X', 'horror', 9, 'A former neo-nazi skinhead tries to prevent his younger brother from going down the same wrong path that he did.', '1998-10-20', 'Tony Kaye', 119, '', 'posters/20150426/url-1.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (3, 'The Lord of the Rings: The Return of the King ', 'adventure', 9, 'Gandalf and Aragorn lead the World of Men against Sauron\'s army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring', '2003-12-17', 'Peter Jackson', 201, '', 'posters/20150426/Rie.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (4, 'Back to the Future ', 'adventure', 9, 'A young man is accidentally sent 30 years into the past in a time-traveling DeLorean invented by his friend, Dr. Emmett Brown, and must make sure his high-school-age parents unite in order to save his own existence.', '1985-03-07', 'Robert Zemeckis', 116, '', 'posters/20150426/url-3.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (5, 'The Matrix', 'action', 9, 'A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.', '1999-01-31', 'Andy Wachowski', 136, '', 'posters/20150426/url-4.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (6, 'Amelie', 'romance', 8, 'Amelie is an innocent and naive girl in Paris with her own sense of justice. She decides to help those around her and, along the way, discovers love.', '2002-08-02', 'Jean-Pierre Jeunet', 148, '', 'posters/20150426/Amelie.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (7, 'The Diving Bell and the Butterfly', 'drama', 8, 'The true story of Elle editor Jean-Dominique Bauby who suffers a stroke and has to live with an almost totally paralyzed body; only his left eye isn\'t paralyzed.', '2007-06-20', 'Julian Schnabel', 112, '', 'posters/20150426/url-6.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (8, 'La Haine', 'crime', 8, 'After local youth Abdel is beaten unconscious by police, a riot ensues on his estate during which a policeman loses his gun. The gun is found by Vinz who threatens he will kill a cop if Abdel dies.', '1996-02-23', 'Mathieu Kassovitz', 98, '', 'posters/20150426/url-5.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (9, 'Life is beautiful', 'romance', 9, 'When an open-minded Jewish librarian and his son become victims of the Holocaust, he uses a perfect mixture of will, humor and imagination to protect his son from the dangers around their camp.', '1999-12-02', 'Roberto Benigni', 116, '', 'posters/20150426/url-2.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (10, 'Lovers of the Arctic Circle', 'drama', 8, ' Otto and Ana are kids when they meet each other. Their names are palindromes. They meet by chance, people are related by chance. A story of circular lives, with circular names, and a circular place (Círculo polar) where the day never ends in the midnight sun. There are things that never end, and Love is one of them. ', '2000-04-02', 'Julio Medem', 112, '', 'posters/20150426/Los_amantes_del_círculo_polar_poster.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (11, 'Crouching Tiger Hidden Dragon', 'action', 8, 'Two warriors in pursuit of a stolen sword and a notorious fugitive are led to an impetuous, physically skilled, adolescent nobleman\'s daughter, who is at a crossroads in her life.', '2000-12-01', 'Ang Lee', 120, '', 'posters/20150426/url-7.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (12, 'Hero', 'action', 8, 'A defense officer, Nameless, was summoned by the King of Qin regarding his success of terminating three warriors.', '2004-09-27', 'Yimou Zhang', 99, '', 'posters/20150426/hero-movie.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (13, 'In the mood for love', 'drama', 8, 'Two neighbors, a woman and a man, form a strong bond after both suspect extramarital activities of their spouses. However, they agree to keep their bond platonic so as not to commit similar wrongs.', '2003-02-14', 'Kaw Wai Wong', 110, '', 'posters/20150426/In-The-Mood-For-Love-poster.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (14, 'Kung Fu Hustle', 'action', 8, 'In Shanghai, China in the 1940s, a wannabe gangster aspires to join the notorious \"Axe Gang\" while residents of a housing complex exhibit extraordinary powers in defending their turf.', '2005-04-22', 'Stephen Chow', 99, '', 'posters/20150426/Kung_Fu_Hustle.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (15, 'Seven Samurai ', 'drama', 9, 'A poor village under attack by bandits recruits seven unemployed samurai to help them defend themselves.', '1956-11-19', 'Akira Kurosawa', 207, '', 'posters/20150426/936full-seven-samurai-poster.jpg');
INSERT INTO `moviewatch`.`Film` (`idFilm`, `name`, `genre`, `rating`, `description`, `releaseDate`, `director`, `duration`, `filepath`, `poster`) VALUES (1, 'Interstellar', 'Sci-Fi', 10, 'A team of explorers travel through a wormhole in an attempt to ensure humanity\'s survival.', '2014-11-07', 'Christopher Nolan', 169, NULL, 'posters/20150426/interstellar.png');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviewatch`.`Country`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviewatch`;
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (1, 'México', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (2, 'Estados Unidos', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (3, 'Brasil', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (4, 'Argentina', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (5, 'Alemania', 'Europa');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (6, 'Chile', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (7, 'Francia', 'Europa');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (8, 'España', 'Europa');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (9, 'Inglaterra', 'Europa');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (10, 'China', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (11, 'Japón', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (12, 'Corea', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (13, 'Perú', 'America');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (14, 'Suiza', 'Europa');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (15, 'Rusia', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (16, 'Filipinas', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (17, 'Mongolia', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (18, 'Vietman', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (19, 'India', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (20, 'Singapur', 'Asia');
INSERT INTO `moviewatch`.`Country` (`idCountry`, `name`, `continent`) VALUES (21, 'Israel', 'Asia');

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviewatch`.`Account`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviewatch`;
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (1, 1, 'gomezhyuuga', 'Fernando', 'Gomez', 'gomezhyuuga@gmail.com', 'Victor Hernández', '2012-02-01', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (2, 2, 'rodolfoarv', 'Rodolfo', 'Ramirez', 'rodolfoarv@gmail.com', 'Alamo Plateado', '2013-03-01', '1', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (3, 3, 'luballinas', 'Luis', 'Ballinas', 'lubal@gmail.com', 'Ecatepec', '2014-12-14', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (4, 4, 'alesben', 'Alessandro', 'Benedetti', 'alessandro@gmail.com', '31 de agosto', '2010-10-10', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (5, 5, 'biamacini', 'Bianca', 'Macini', 'biancamacini@gmail.com', 'Zurbano', '2010-09-09', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (6, 6, 'ferrariTom', 'Tommaso', 'Ferrante', 'tommasferrari@gmail.com', 'San Sebastian', '2012-06-05', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (7, 7, 'yuilove', 'Yui', 'de Hyuuga', 'yui@gmail.com', 'Shibuya Crossing', '2015-02-01', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (8, 8, 'junwan', 'Jun', 'Wang', 'junwa@gmail.com', 'Midosuji ', '2014-03-02', 'NULL', NULL);
INSERT INTO `moviewatch`.`Account` (`idAccount`, `idCountry`, `username`, `firstName`, `lastName`, `email`, `address`, `memberSince`, `password`, `user_id`) VALUES (9, 9, 'donkeykong', 'Chen', 'Kong', 'donkeykong@gmail.com', 'Namba', '2000-04-02', 'NULL', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviewatch`.`UserRating`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviewatch`;
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 1, 1, 8);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 1, 2, 9);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 1, 3, 10);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 2, 2, 7);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 3, 2, 6);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 3, 5, 10);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 4, 6, 9);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 4, 7, 8);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 4, 8, 7);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 5, 8, 6);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 5, 9, 10);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 6, 9, 8);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 7, 10, 7);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 7, 11, 6);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 8, 11, 10);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 8, 10, 10);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 9, 10, 9);
INSERT INTO `moviewatch`.`UserRating` (`idRating`, `idAccount`, `idFilm`, `rating`) VALUES (DEFAULT, 9, 11, 8);

COMMIT;


-- -----------------------------------------------------
-- Data for table `moviewatch`.`Catalog`
-- -----------------------------------------------------
START TRANSACTION;
USE `moviewatch`;
INSERT INTO `moviewatch`.`Catalog` (`idCatalog`, `name`) VALUES (1, 'America');
INSERT INTO `moviewatch`.`Catalog` (`idCatalog`, `name`) VALUES (2, 'Europe');
INSERT INTO `moviewatch`.`Catalog` (`idCatalog`, `name`) VALUES (3, 'Asia');

COMMIT;

